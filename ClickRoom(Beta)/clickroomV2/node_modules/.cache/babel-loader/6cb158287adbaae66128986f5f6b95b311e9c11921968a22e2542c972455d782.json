{"ast":null,"code":"var _jsxFileName = \"/Users/1spartan/Desktop/clickroom/src/components/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./AuthModal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = ({\n  onClose\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    nombre: '',\n    email: '',\n    password: ''\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"http://<SPRING_SERVER>/api/usuarios/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        alert(\"Usuario registrado exitosamente\");\n        onClose();\n      } else {\n        alert(\"Error al registrar usuario\");\n      }\n    } catch (error) {\n      alert(\"Error de red\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-modal\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Registrarse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nombre\",\n        required: true,\n        onChange: e => setFormData({\n          ...formData,\n          nombre: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Correo\",\n        required: true,\n        onChange: e => setFormData({\n          ...formData,\n          email: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Contrase\\xF1a\",\n        required: true,\n        onChange: e => setFormData({\n          ...formData,\n          password: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Registrarse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onClose,\n        children: \"Cerrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"ImXw54K7jLVUdfTv9qS8tDwstz8=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Register","onClose","_s","formData","setFormData","nombre","email","password","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","alert","error","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","required","onChange","target","value","onClick","_c","$RefreshReg$"],"sources":["/Users/1spartan/Desktop/clickroom/src/components/Register.js"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport \"./AuthModal.css\";\n\nconst Register = ({ onClose }) => {\n  const [formData, setFormData] = useState({\n    nombre: '',\n    email: '',\n    password: ''\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"http://<SPRING_SERVER>/api/usuarios/register\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(formData)\n      });\n\n      if (response.ok) {\n        alert(\"Usuario registrado exitosamente\");\n        onClose();\n      } else {\n        alert(\"Error al registrar usuario\");\n      }\n    } catch (error) {\n      alert(\"Error de red\");\n    }\n  };\n\n  return (\n    <div className=\"auth-modal\">\n      <form onSubmit={handleSubmit}>\n        <h2>Registrarse</h2>\n        <input type=\"text\" placeholder=\"Nombre\" required onChange={e => setFormData({ ...formData, nombre: e.target.value })} />\n        <input type=\"email\" placeholder=\"Correo\" required onChange={e => setFormData({ ...formData, email: e.target.value })} />\n        <input type=\"password\" placeholder=\"ContraseÃ±a\" required onChange={e => setFormData({ ...formData, password: e.target.value })} />\n        <button type=\"submit\">Registrarse</button>\n        <button type=\"button\" onClick={onClose}>Cerrar</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}